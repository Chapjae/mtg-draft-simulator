{"ast":null,"code":"var _jsxFileName = \"/Users/jayliu/Desktop/draft_sim/draft-sim/src/SetSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardGallery = () => {\n  _s();\n  const setSelectRef = useRef(null);\n  const cardSizeSelectRef = useRef(null);\n  const [cardImages, setCardImages] = useState([]);\n  const handleOpenPack = async () => {\n    const selectedSet = setSelectRef.current.value;\n    const selectedCardSize = cardSizeSelectRef.current.value;\n    try {\n      // Fetch data from Scryfall API\n      const response = await axios.get(`https://api.scryfall.com/sets/${selectedSet}/booster`);\n\n      // Extract card image URLs from response data\n      const cardImageUrls = response.data.cards.map(card => card.image_uris[selectedCardSize]);\n\n      // Update cardImages state with new card image URLs\n      setCardImages(cardImageUrls);\n    } catch (error) {\n      console.error(\"Error fetching card data:\", error);\n    }\n  };\n\n  // Render card gallery component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      ref: setSelectRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: cardSizeSelectRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenPack,\n      children: \"Open Pack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cardImages.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Card ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CardGallery, \"OuH2CKvemkxQNOmpX0zvPZnivZ4=\");\n_c = CardGallery;\nexport default CardGallery;\nvar _c;\n$RefreshReg$(_c, \"CardGallery\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","CardGallery","_s","setSelectRef","cardSizeSelectRef","cardImages","setCardImages","handleOpenPack","selectedSet","current","value","selectedCardSize","response","get","cardImageUrls","data","cards","map","card","image_uris","error","console","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","imageUrl","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/jayliu/Desktop/draft_sim/draft-sim/src/SetSelect.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nconst CardGallery = () => {\n  const setSelectRef = useRef(null);\n  const cardSizeSelectRef = useRef(null);\n  const [cardImages, setCardImages] = useState([]);\n\n  const handleOpenPack = async () => {\n    const selectedSet = setSelectRef.current.value;\n    const selectedCardSize = cardSizeSelectRef.current.value;\n\n    try {\n      // Fetch data from Scryfall API\n      const response = await axios.get(`https://api.scryfall.com/sets/${selectedSet}/booster`);\n\n      // Extract card image URLs from response data\n      const cardImageUrls = response.data.cards.map(card => card.image_uris[selectedCardSize]);\n\n      // Update cardImages state with new card image URLs\n      setCardImages(cardImageUrls);\n    } catch (error) {\n      console.error(\"Error fetching card data:\", error);\n    }\n  };\n\n  // Render card gallery component\n  return (\n    <div>\n      {/* Set selection dropdown */}\n      <select ref={setSelectRef}>\n        {/* options */}\n      </select>\n\n      {/* Card size selection dropdown */}\n      <select ref={cardSizeSelectRef}>\n        {/* options */}\n      </select>\n\n      {/* Open pack button */}\n      <button onClick={handleOpenPack}>Open Pack</button>\n\n      {/* Display card images */}\n      <div>\n        {cardImages.map((imageUrl, index) => (\n          <img key={index} src={imageUrl} alt={`Card ${index}`} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CardGallery;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMQ,iBAAiB,GAAGR,MAAM,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,WAAW,GAAGL,YAAY,CAACM,OAAO,CAACC,KAAK;IAC9C,MAAMC,gBAAgB,GAAGP,iBAAiB,CAACK,OAAO,CAACC,KAAK;IAExD,IAAI;MACF;MACA,MAAME,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,iCAAgCL,WAAY,UAAS,CAAC;;MAExF;MACA,MAAMM,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAACR,gBAAgB,CAAC,CAAC;;MAExF;MACAL,aAAa,CAACQ,aAAa,CAAC;IAC9B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACA,oBACEpB,OAAA;IAAAsB,QAAA,gBAEEtB,OAAA;MAAQuB,GAAG,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEjB,eAGT3B,OAAA;MAAQuB,GAAG,EAAEnB;IAAkB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtB,eAGT3B,OAAA;MAAQ4B,OAAO,EAAErB,cAAe;MAAAe,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAGnD3B,OAAA;MAAAsB,QAAA,EACGjB,UAAU,CAACY,GAAG,CAAC,CAACY,QAAQ,EAAEC,KAAK,kBAC9B9B,OAAA;QAAiB+B,GAAG,EAAEF,QAAS;QAACG,GAAG,EAAG,QAAOF,KAAM;MAAE,GAA3CA,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACzB,EAAA,CA/CID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}