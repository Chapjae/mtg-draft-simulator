{"ast":null,"code":"var _jsxFileName = \"/Users/jayliu/Desktop/draft_sim/draft-sim/src/SetSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardGallery = () => {\n  _s();\n  const [selectedSet, setSelectedSet] = useState('');\n  const [sets, setSets] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [cardSize, setCardSize] = useState('small'); // Added state for card size\n  const [cardImages, setCardImages] = useState([]);\n  useEffect(() => {\n    const fetchSets = async () => {\n      try {\n        const response = await axios.get('https://api.scryfall.com/sets');\n        setSets(response.data.data);\n      } catch (error) {\n        console.error('Error fetching sets:', error);\n      }\n    };\n    fetchSets();\n  }, []);\n  const handleSetChange = event => {\n    setSelectedSet(event.target.value);\n  };\n  const handleButtonClick = async () => {\n    try {\n      const response = await axios.get(`https://api.scryfall.com/cards/search?q=set%3A${selectedSet}`);\n      setCards(response.data.data);\n    } catch (error) {\n      console.error('Error fetching cards:', error);\n    }\n  };\n  const handleCardSizeChange = event => {\n    setCardSize(event.target.value);\n  };\n  const handleOpenPack = async () => {\n    const selectedSet = selectedSet.value;\n    const cardSize = cardSize.value;\n    try {\n      // Fetch all cards from the chosen set\n      const response = await fetch(`https://api.scryfall.com/cards/search?q=set:${selectedSet}`);\n      const data = await response.json();\n\n      // Filter out any cards that are not part of a normal booster pack\n      const boosterCards = data.data.filter(card => card.booster);\n\n      // Sort the booster cards array by rarity, assuming rarity is represented by 'rarity' property\n      const sortedCards = boosterCards.sort((a, b) => {\n        const rarityOrder = {\n          common: 1,\n          uncommon: 2,\n          rare: 3,\n          mythic: 4\n        };\n        return rarityOrder[a.rarity] - rarityOrder[b.rarity];\n      });\n\n      // Select the first N cards from the sorted array, where N is the number of cards in a booster pack\n      const packSize = 15; // Assume a booster pack contains 15 cards\n      const selectedCards = sortedCards.slice(0, packSize);\n\n      // Update the state to trigger a re-render with the new card images\n      setCardImages(selectedCards.map(card => card.image_uris[cardSize]));\n    } catch (error) {\n      console.error('Error fetching booster pack:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSet,\n      onChange: handleSetChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), sets.map(set => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: set.code,\n        children: set.name\n      }, set.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: cardSize,\n      onChange: handleCardSizeChange,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"small\",\n        children: \"Small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"normal\",\n        children: \"Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"large\",\n        children: \"Large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"View All Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenPack,\n      children: \"Try Opening a Pack!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n        gridGap: '1rem'\n      },\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0.5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image_uris.normal // Dynamically set the card size\n          ,\n          alt: card.name,\n          style: {\n            width: '100%',\n            height: 'auto'\n          } // Set width to 100% and height to auto for responsiveness\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CardGallery, \"0SDsgiegXq4SaDf2FK0QRIKiqkY=\");\n_c = CardGallery;\nexport default CardGallery;\nvar _c;\n$RefreshReg$(_c, \"CardGallery\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","CardGallery","_s","selectedSet","setSelectedSet","sets","setSets","cards","setCards","cardSize","setCardSize","cardImages","setCardImages","fetchSets","response","get","data","error","console","handleSetChange","event","target","value","handleButtonClick","handleCardSizeChange","handleOpenPack","fetch","json","boosterCards","filter","card","booster","sortedCards","sort","a","b","rarityOrder","common","uncommon","rare","mythic","rarity","packSize","selectedCards","slice","map","image_uris","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","set","code","name","onClick","style","display","gridTemplateColumns","gridGap","padding","src","normal","alt","width","height","id","_c","$RefreshReg$"],"sources":["/Users/jayliu/Desktop/draft_sim/draft-sim/src/SetSelect.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst CardGallery = () => {\n  const [selectedSet, setSelectedSet] = useState('');\n  const [sets, setSets] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [cardSize, setCardSize] = useState('small'); // Added state for card size\n  const [cardImages, setCardImages] = useState([]);\n\n  useEffect(() => {\n    const fetchSets = async () => {\n      try {\n        const response = await axios.get('https://api.scryfall.com/sets');\n        setSets(response.data.data);\n      } catch (error) {\n        console.error('Error fetching sets:', error);\n      }\n    };\n    fetchSets();\n  }, []);\n\n  const handleSetChange = (event) => {\n    setSelectedSet(event.target.value);\n  };\n\n  const handleButtonClick = async () => {\n    try {\n      const response = await axios.get(`https://api.scryfall.com/cards/search?q=set%3A${selectedSet}`);\n      setCards(response.data.data);\n    } catch (error) {\n      console.error('Error fetching cards:', error);\n    }\n  };\n\n  const handleCardSizeChange = (event) => {\n    setCardSize(event.target.value);\n  };\n  \n  const handleOpenPack = async () => {\n    const selectedSet = selectedSet.value;\n    const cardSize = cardSize.value;\n  \n    try {\n      // Fetch all cards from the chosen set\n      const response = await fetch(`https://api.scryfall.com/cards/search?q=set:${selectedSet}`);\n      const data = await response.json();\n  \n      // Filter out any cards that are not part of a normal booster pack\n      const boosterCards = data.data.filter(card => card.booster);\n  \n      // Sort the booster cards array by rarity, assuming rarity is represented by 'rarity' property\n      const sortedCards = boosterCards.sort((a, b) => {\n        const rarityOrder = { common: 1, uncommon: 2, rare: 3, mythic: 4 };\n        return rarityOrder[a.rarity] - rarityOrder[b.rarity];\n      });\n  \n      // Select the first N cards from the sorted array, where N is the number of cards in a booster pack\n      const packSize = 15; // Assume a booster pack contains 15 cards\n      const selectedCards = sortedCards.slice(0, packSize);\n  \n      // Update the state to trigger a re-render with the new card images\n      setCardImages(selectedCards.map(card => card.image_uris[cardSize]));\n    } catch (error) {\n      console.error('Error fetching booster pack:', error);\n    }\n  };\n  \n  return (\n    <div>\n      <h1>Card Gallery</h1>\n      <select value={selectedSet} onChange={handleSetChange}>\n        <option value=\"\">Select a Set</option>\n        {sets.map(set => (\n          <option key={set.code} value={set.code}>\n            {set.name}\n          </option>\n        ))}\n      </select>\n      <select value={cardSize} onChange={handleCardSizeChange}> {/* Added card size selector */}\n        <option value=\"small\">Small</option>\n        <option value=\"normal\">Normal</option>\n        <option value=\"large\">Large</option>\n      </select>\n      <button onClick={handleButtonClick}>View All Cards</button>\n      <button onClick={handleOpenPack}>Try Opening a Pack!</button>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n          gridGap: '1rem',\n        }}\n      >\n        {cards.map(card => (\n          <div key={card.id} style={{ padding: '0.5rem' }}>\n            <img\n              src={card.image_uris.normal} // Dynamically set the card size\n              alt={card.name}\n              style={{ width: '100%', height: 'auto' }} // Set width to 100% and height to auto for responsiveness\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CardGallery;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,+BAA+B,CAAC;QACjET,OAAO,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDJ,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,eAAe,GAAIC,KAAK,IAAK;IACjChB,cAAc,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,iDAAgDZ,WAAY,EAAC,CAAC;MAChGK,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMO,oBAAoB,GAAIJ,KAAK,IAAK;IACtCV,WAAW,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMtB,WAAW,GAAGA,WAAW,CAACmB,KAAK;IACrC,MAAMb,QAAQ,GAAGA,QAAQ,CAACa,KAAK;IAE/B,IAAI;MACF;MACA,MAAMR,QAAQ,GAAG,MAAMY,KAAK,CAAE,+CAA8CvB,WAAY,EAAC,CAAC;MAC1F,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACa,IAAI,EAAE;;MAElC;MACA,MAAMC,YAAY,GAAGZ,IAAI,CAACA,IAAI,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;;MAE3D;MACA,MAAMC,WAAW,GAAGJ,YAAY,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC9C,MAAMC,WAAW,GAAG;UAAEC,MAAM,EAAE,CAAC;UAAEC,QAAQ,EAAE,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QAClE,OAAOJ,WAAW,CAACF,CAAC,CAACO,MAAM,CAAC,GAAGL,WAAW,CAACD,CAAC,CAACM,MAAM,CAAC;MACtD,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;MACrB,MAAMC,aAAa,GAAGX,WAAW,CAACY,KAAK,CAAC,CAAC,EAAEF,QAAQ,CAAC;;MAEpD;MACA9B,aAAa,CAAC+B,aAAa,CAACE,GAAG,CAACf,IAAI,IAAIA,IAAI,CAACgB,UAAU,CAACrC,QAAQ,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAA+C,QAAA,gBACE/C,OAAA;MAAA+C,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrBnD,OAAA;MAAQsB,KAAK,EAAEnB,WAAY;MAACiD,QAAQ,EAAEjC,eAAgB;MAAA4B,QAAA,gBACpD/C,OAAA;QAAQsB,KAAK,EAAC,EAAE;QAAAyB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACrC9C,IAAI,CAACwC,GAAG,CAACQ,GAAG,iBACXrD,OAAA;QAAuBsB,KAAK,EAAE+B,GAAG,CAACC,IAAK;QAAAP,QAAA,EACpCM,GAAG,CAACE;MAAI,GADEF,GAAG,CAACC,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACK,eACTnD,OAAA;MAAQsB,KAAK,EAAEb,QAAS;MAAC2C,QAAQ,EAAE5B,oBAAqB;MAAAuB,QAAA,GAAC,GAAC,eACxD/C,OAAA;QAAQsB,KAAK,EAAC,OAAO;QAAAyB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACpCnD,OAAA;QAAQsB,KAAK,EAAC,QAAQ;QAAAyB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACtCnD,OAAA;QAAQsB,KAAK,EAAC,OAAO;QAAAyB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,eACTnD,OAAA;MAAQwD,OAAO,EAAEjC,iBAAkB;MAAAwB,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3DnD,OAAA;MAAQwD,OAAO,EAAE/B,cAAe;MAAAsB,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC7DnD,OAAA;MACEyD,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE,sCAAsC;QAC3DC,OAAO,EAAE;MACX,CAAE;MAAAb,QAAA,EAEDxC,KAAK,CAACsC,GAAG,CAACf,IAAI,iBACb9B,OAAA;QAAmByD,KAAK,EAAE;UAAEI,OAAO,EAAE;QAAS,CAAE;QAAAd,QAAA,eAC9C/C,OAAA;UACE8D,GAAG,EAAEhC,IAAI,CAACgB,UAAU,CAACiB,MAAO,CAAC;UAAA;UAC7BC,GAAG,EAAElC,IAAI,CAACyB,IAAK;UACfE,KAAK,EAAE;YAAEQ,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO,CAAE,CAAC;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC1C,GALMrB,IAAI,CAACqC,EAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACjD,EAAA,CAtGID,WAAW;AAAAmE,EAAA,GAAXnE,WAAW;AAwGjB,eAAeA,WAAW;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}