{"ast":null,"code":"var _jsxFileName = \"/Users/jayliu/Desktop/draft_sim/draft-sim/src/SetSelect.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardViewer = () => {\n  _s();\n  const [selectedSet, setSelectedSet] = useState('');\n  const [sets, setSets] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [pack, setPack] = useState([]);\n  const [rares, setRares] = useState([]);\n  const [uncommons, setUncommons] = useState([]);\n  const [commons, setCommons] = useState([]);\n  useEffect(() => {\n    const fetchSets = async () => {\n      try {\n        const response = await axios.get(\"https://api.scryfall.com/sets\");\n        // debugger\n        // setSets(response.data.data);\n        setSets(response.data.data.filter(set => set.name == \"Phyrexia: All Will Be One\"));\n      } catch (error) {\n        console.error(\"Error fetching sets:\", error);\n      }\n    };\n    fetchSets();\n  }, []);\n  const handleSetChange = async e => {\n    setSelectedSet(e.target.value);\n    try {\n      const response = await axios.get(`https://api.scryfall.com/cards/search?q=set%3A${e.target.value}`);\n      const cards = response.data.data;\n      setCards(cards);\n      setRares(cards.filter(card => card.rarity == \"rare\"));\n      setUncommons(cards.filter(card => card.rarity == \"uncommon\"));\n      setCommons(cards.filter(card => card.rarity == \"common\"));\n      setPack([]);\n    } catch (error) {\n      console.error(\"Error fetching cards:\", error);\n    }\n  };\n\n  // const handleButtonClick = async () => {\n  //   try {\n  //     const response = await axios.get(`https://api.scryfall.com/cards/search?q=set%3A${selectedSet}`)\n  //     setCards(response.data.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching cards:\", error);\n  //   }\n  // };\n\n  const shuffle = arr => {\n    let shuffledArr = [...arr].sort(() => 0.5 - Math.random());\n    return shuffledArr;\n  };\n  const generatePack = () => {\n    let packCopy = [];\n    // let rares = cards.filter(card => card.rarity == \"rare\")\n    let raresCopy = [...rares].sort(() => 0.5 - Math.random());\n    let raresCopy2 = shuffle(rares);\n    debugger;\n    let uncommonsCopy = [...uncommons].sort(() => 0.5 - Math.random());\n    // uncommonsCopy.sort(() => 0.5 - Math.random());\n    let commonsCopy = [...commons].sort(() => 0.5 - Math.random());\n    // let uncommons = cards.filter(card => card.rarity == \"uncommon\")\n    // let commons = cards.filter(card => card.rarity == \"common\")\n\n    let randomRare = raresCopy.slice(0, 1);\n    let randomUncommons = uncommonsCopy.slice(0, 3);\n    let randomCommons = commonsCopy.slice(0, 10);\n    packCopy.push(randomRare, randomUncommons, randomCommons);\n    // packCopy.push(randomUncommons)\n    // packCopy.push(randomCommons)\n    setPack([...packCopy]);\n  };\n\n  // const handleUncommons = () => {\n  //   setUncommons(cards.filter(card => card.rarity == \"uncommon\"))\n  //   }\n\n  // const handleCommons = () => {\n  //   setCommons(cards.filter(card => card.rarity == \"common\"))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSet,\n      onChange: handleSetChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), sets.map(set => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: set.code,\n        children: set.name\n      }, set.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 0.5fr))'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePack,\n        children: \"Open a Pack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), pack.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0.5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image_uris.normal,\n          alt: card.name,\n          style: {\n            width: \"100%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(CardViewer, \"dpPJKtkg8unrMPYDBiEpP6Rrf0w=\");\n_c = CardViewer;\nexport default CardViewer;\nvar _c;\n$RefreshReg$(_c, \"CardViewer\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","CardViewer","_s","selectedSet","setSelectedSet","sets","setSets","cards","setCards","pack","setPack","rares","setRares","uncommons","setUncommons","commons","setCommons","fetchSets","response","get","data","filter","set","name","error","console","handleSetChange","e","target","value","card","rarity","shuffle","arr","shuffledArr","sort","Math","random","generatePack","packCopy","raresCopy","raresCopy2","uncommonsCopy","commonsCopy","randomRare","slice","randomUncommons","randomCommons","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","code","style","display","gridTemplateColumns","onClick","padding","src","image_uris","normal","alt","width","height","id","_c","$RefreshReg$"],"sources":["/Users/jayliu/Desktop/draft_sim/draft-sim/src/SetSelect.js"],"sourcesContent":["import {useState, useEffect} from \"react\"\nimport axios from \"axios\"\n\nconst CardViewer = () => {\n  const [selectedSet, setSelectedSet] = useState('');\n  const [sets, setSets] = useState([])\n  const [cards, setCards] = useState([])\n  const [pack, setPack] = useState([])\n  const [rares, setRares] = useState([])\n  const [uncommons, setUncommons] = useState([])\n  const [commons, setCommons] = useState([])\n\n  useEffect(() => {\n    const fetchSets = async () => {\n      try {\n        const response = await axios.get(\"https://api.scryfall.com/sets\");\n        // debugger\n        // setSets(response.data.data);\n        setSets(response.data.data.filter(set => set.name == \"Phyrexia: All Will Be One\"));\n      } catch (error) {\n        console.error(\"Error fetching sets:\", error);\n      }\n    };\n    fetchSets();\n  }, []);\n\n  const handleSetChange = async (e) => {\n    setSelectedSet(e.target.value)\n    try {\n      const response = await axios.get(`https://api.scryfall.com/cards/search?q=set%3A${e.target.value}`)\n      const cards = response.data.data\n      setCards(cards);\n      setRares(cards.filter(card => card.rarity == \"rare\"))\n      setUncommons(cards.filter(card => card.rarity == \"uncommon\"))\n      setCommons(cards.filter(card => card.rarity == \"common\"))\n      setPack([]);\n    } catch (error) {\n      console.error(\"Error fetching cards:\", error);\n    }\n  };\n\n  // const handleButtonClick = async () => {\n  //   try {\n  //     const response = await axios.get(`https://api.scryfall.com/cards/search?q=set%3A${selectedSet}`)\n  //     setCards(response.data.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching cards:\", error);\n  //   }\n  // };\n\n  const shuffle = (arr) => {\n    let shuffledArr = [...arr].sort(() => 0.5 - Math.random())\n    return shuffledArr\n  }\n\n  const generatePack = () => {\n    let packCopy = []\n    // let rares = cards.filter(card => card.rarity == \"rare\")\n    let raresCopy = [...rares].sort(() => 0.5 - Math.random())\n    let raresCopy2 = shuffle(rares);\n    debugger\n    let uncommonsCopy = [ ...uncommons ].sort(() => 0.5 - Math.random())\n    // uncommonsCopy.sort(() => 0.5 - Math.random());\n    let commonsCopy = [...commons].sort(() => 0.5 - Math.random())\n    // let uncommons = cards.filter(card => card.rarity == \"uncommon\")\n    // let commons = cards.filter(card => card.rarity == \"common\")\n\n    let randomRare = raresCopy.slice(0, 1);\n    let randomUncommons = uncommonsCopy.slice(0, 3);\n    let randomCommons = commonsCopy.slice(0, 10);\n    \n    packCopy.push(randomRare, randomUncommons, randomCommons)\n    // packCopy.push(randomUncommons)\n    // packCopy.push(randomCommons)\n    setPack([...packCopy])\n       \n  }\n  \n  // const handleUncommons = () => {\n  //   setUncommons(cards.filter(card => card.rarity == \"uncommon\"))\n  //   }\n\n  // const handleCommons = () => {\n  //   setCommons(cards.filter(card => card.rarity == \"common\"))\n  // }\n\n  return (\n    <div>\n      <h1>Card Viewer</h1>\n      <select value={selectedSet} onChange={handleSetChange}>\n        <option value=\"\">Select a Set</option>\n        {sets.map(set => (\n          <option key={set.code} value={set.code}>\n            {set.name}\n          </option>\n        ))}\n      </select>\n      {/* <button onClick={handleButtonClick}>View Cards!</button> */}\n      <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 0.5fr))',\n      }}>\n      <button onClick={generatePack}>Open a Pack</button>\n        {pack.map(card => (\n            <div key={card.id} style={{ padding: '0.5rem'}}>\n              <img\n              src={card.image_uris.normal}\n              alt={card.name}\n              style={{width: \"100%\", height: \"auto\"}}\n              />\n            </div>\n          ))}\n      {/* <button onClick={handleUncommons}>Show me the Uncommons</button> */}\n        {/* {uncommons.map(card => (\n            <div key={card.id} style={{ padding: '0.5rem'}}>\n              <img\n              src={card.image_uris.normal}\n              alt={card.name}\n              style={{width: \"100%\", height: \"auto\"}}\n              />\n            </div>\n          ))}  */}\n       {/* <button onClick={handleCommons}>Show me the Commons</button> */}\n        {/* {commons.map(card => (\n            <div key={card.id} style={{ padding: '0.5rem'}}>\n              <img\n              src={card.image_uris.normal}\n              alt={card.name}\n              style={{width: \"100%\", height: \"auto\"}}\n              />\n            </div>\n          ))} */}\n        {/* {cards.map(card => (\n          <div key={card.id} style={{ padding: '0.5rem'}}>\n            <img\n            src={card.image_uris.normal}\n            alt={card.name}\n            style={{width: \"100%\", height: \"auto\"}}\n            />\n          </div>\n        ))} */}\n      </div>\n    </div>\n  );\n};\n\nexport default CardViewer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}